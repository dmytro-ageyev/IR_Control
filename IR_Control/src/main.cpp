/**
 * @file IR_Remote_LED_Servo_Menu_Functions.ino
 * @brief –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–æ–º —ñ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–º —á–µ—Ä–µ–∑ –Ü–ß-–ø—É–ª—å—Ç –∑ –º–µ–Ω—é —É Serial Monitor.
 *
 * –ü—Ä–æ–≥—Ä–∞–º–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—î —Ç—Ä–∏ —Ä–µ–∂–∏–º–∏:
 *   1Ô∏è‚É£ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∫–Ω–æ–ø–æ–∫ (–≤–∏–≤—ñ–¥ –∫–æ–¥—ñ–≤ —É Serial Monitor)
 *   2Ô∏è‚É£ –ö–µ—Ä—É–≤–∞–Ω–Ω—è –≤–±—É–¥–æ–≤–∞–Ω–∏–º —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–æ–º (–∫–Ω–æ–ø–∫–∞ '*' ‚Äì –£–í–Ü–ú–ö–ù–£–¢–ò, '#' ‚Äì –í–ò–ú–ö–ù–£–¢–ò)
 *   3Ô∏è‚É£ –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–º (–∫–Ω–æ–ø–∫–∞ '*' ‚Äì –∑–º–µ–Ω—à–∏—Ç–∏ –∫—É—Ç –Ω–∞ 3¬∞, '#' ‚Äì –∑–±—ñ–ª—å—à–∏—Ç–∏)
 *
 * –í–∏–±—ñ—Ä —Ä–µ–∂–∏–º—É –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è —á–µ—Ä–µ–∑ Serial Monitor.
 * –ü—Ä–æ–≥—Ä–∞–º–∞ –≤–∏–≤–æ–¥–∏—Ç—å —É –ø–æ—Ä—Ç –∫–æ–¥–∏ –∫–Ω–æ–ø–æ–∫, –∑–º—ñ–Ω—É —Å—Ç–∞–Ω—É LED —Ç–∞ –∫—É—Ç–∞ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É.
 *
 * --- –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è ---
 *  –Ü–ß-–ø—Ä–∏–π–º–∞—á (VS1838B –∞–±–æ TSOP4838):
 *    - OUT ‚Üí D2
 *    - VCC ‚Üí 5V
 *    - GND ‚Üí GND
 *
 *  –°–µ—Ä–≤–æ–ø—Ä–∏–≤—ñ–¥:
 *    - –°–∏–≥–Ω–∞–ª ‚Üí D9
 *    - –ñ–∏–≤–ª–µ–Ω–Ω—è ‚Üí 5V
 *    - –ó–µ–º–ª—è ‚Üí GND
 *
 * --- –ù–µ–æ–±—Ö—ñ–¥–Ω—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ ---
 *  - <IRremote.h> (–ø—Ä–∏–π–æ–º —Å–∏–≥–Ω–∞–ª—ñ–≤ –ø—É–ª—å—Ç–∞)
 *  - <Servo.h>    (–∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–º)
 *
 * @author  –î–º–∏—Ç—Ä–æ –ê–≥–µ—î–≤
 * @date    09.10.2025
 * @license MIT
 */

#include <Arduino.h>
#include <IRremote.hpp>
#include <Servo.h>

// ----------------------------------------------------------
//                    –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —Ç–∞ –∑–º—ñ–Ω–Ω—ñ
// ----------------------------------------------------------

const int RECV_PIN = 2;   ///< –ü—ñ–Ω –ø—Ä–∏–π–º–∞—á–∞ –Ü–ß-–ø—É–ª—å—Ç–∞
const int LED_PIN = 13;   ///< –í–±—É–¥–æ–≤–∞–Ω–∏–π —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥
const int SERVO_PIN = 9;  ///< –ü—ñ–Ω —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É
const int ANGLE_STEP = 3; ///< –ö—Ä–æ–∫ –∑–º—ñ–Ω–∏ –∫—É—Ç–∞ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É

//IRrecv irrecv(RECV_PIN);  ///< –û–±‚Äô—î–∫—Ç –ø—Ä–∏–π–º–∞—á–∞ –Ü–ß-—Å–∏–≥–Ω–∞–ª—ñ–≤
decode_results results;   ///< –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ–≥–æ –∫–æ–¥—É
Servo myServo;            ///< –û–±‚Äô—î–∫—Ç —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É

int menuMode = 0;         ///< –ü–æ—Ç–æ—á–Ω–∏–π —Ä–µ–∂–∏–º (0 ‚Äì –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥, 1 ‚Äì LED, 2 ‚Äì —Å–µ—Ä–≤–æ)
int servoAngle = 90;      ///< –ü–æ—Ç–æ—á–Ω–∏–π –∫—É—Ç —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É

// ----------------------------------------------------------
//                   –ü–†–û–¢–û–¢–ò–ü–ò –§–£–ù–ö–¶–Ü–ô
// ----------------------------------------------------------
void PrintMenu();
void HandleSerialInput();
void HandleIRInput();
void HandleLEDControl(uint16_t command);
void HandleServoControl(uint16_t command);
void PrintAngleChange(int angle);

// ----------------------------------------------------------
//                         SETUP()
// ----------------------------------------------------------
void setup() {
  Serial.begin(9600);
  Serial.println("====================================================");
  Serial.println("üì° –°–∏—Å—Ç–µ–º–∞ –∫–µ—Ä—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –Ü–ß-–ø—É–ª—å—Ç —ñ Serial Monitor");
  Serial.println("====================================================");
  Serial.println();
  Serial.println(">  –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤: ");
  
  //irrecv.enableIRIn();
  IrReceiver.begin(RECV_PIN, ENABLE_LED_FEEDBACK);
  pinMode(LED_PIN, OUTPUT);
  Serial.println("[+]  –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤–±—É–¥–æ–≤–∞–Ω–æ–≥–æ —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥—É ");
  Serial.println("[+]  –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è IR-–ø—Ä–∏–π–º–∞—á–∞ ");
  if (myServo.attach(SERVO_PIN))
  {
    Serial.println("[+]  –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É ");
    myServo.write(servoAngle);
  }
  else Serial.println("[-]  –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É ");
  Serial.println();
  PrintMenu();
}

// ----------------------------------------------------------
//                          LOOP()
// ----------------------------------------------------------
void loop() {
  HandleSerialInput(); // –û–±—Ä–æ–±–∫–∞ –≤–≤–æ–¥—É –∑ —Ç–µ—Ä–º—ñ–Ω–∞–ª—É
  HandleIRInput();     // –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥ —ñ–∑ –ø—É–ª—å—Ç–∞
}

// ----------------------------------------------------------
//                    –û–ë–†–û–ë–ö–ê –í–í–û–î–£ –ó SERIAL
// ----------------------------------------------------------
/**
 * @brief –û–±—Ä–æ–±–ª—è—î –≤–≤–µ–¥–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–µ—Ä–º—ñ–Ω–∞–ª—É (Serial Monitor).
 *
 * –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—É 0, 1 –∞–±–æ 2 –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º—ñ–∂ —Ä–µ–∂–∏–º–∞–º–∏:
 * - 0 ‚Äî –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∫–Ω–æ–ø–æ–∫ –ø—É–ª—å—Ç–∞
 * - 1 ‚Äî –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–æ–º
 * - 2 ‚Äî –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–º
 */
void HandleSerialInput() {
  if (Serial.available()) {
    char choice = Serial.read();
    switch (choice) {
      case '0': menuMode = 0; break;
      case '1': menuMode = 1; break;
      case '2': menuMode = 2; break;
      default:
        Serial.println("‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –≤–∏–±—ñ—Ä. –í–≤–µ–¥—ñ—Ç—å 0, 1 –∞–±–æ 2.");
        return;
    }
    PrintMenu();
  }
}

// ----------------------------------------------------------
//                 –û–ë–†–û–ë–ö–ê –°–ò–ì–ù–ê–õ–Ü–í –ó –ü–£–õ–¨–¢–ê
// ----------------------------------------------------------
/**
 * @brief –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥–∏ –∑ –Ü–ß-–ø—É–ª—å—Ç–∞ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É.
 *
 * –£—Å—ñ –ø—Ä–∏–π–Ω—è—Ç—ñ –∫–æ–¥–∏ –≤–∏–≤–æ–¥—è—Ç—å—Å—è —É Serial Monitor —É —à—ñ—Å—Ç–Ω–∞–¥—Ü—è—Ç–∫–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ.
 * –í—ñ–¥–ø–æ–≤—ñ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É –º–µ–Ω—é.
 */
void HandleIRInput() {
  if (IrReceiver.decode()) {
    uint16_t command = IrReceiver.decodedIRData.command;;
    
    // –í–∏–≤—ñ–¥ –∫–æ–¥—É –∫–Ω–æ–ø–∫–∏
    Serial.print("–ö–æ–¥ –∫–Ω–æ–ø–∫–∏: 0x");
    Serial.println(command);

    switch (menuMode) {
      case 0:
        Serial.println("–†–µ–∂–∏–º –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É: –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏–π–Ω—è—Ç–∞.\n");
        break;
      case 1:
        HandleLEDControl(command);
        break;
      case 2:
        HandleServoControl(command);
        break;
    }

    IrReceiver.resume(); // –ì–æ—Ç—É–≤–∞—Ç–∏—Å—è –¥–æ –ø—Ä–∏–π–æ–º—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª—É
  }
}

// ----------------------------------------------------------
//                    –í–ò–í–Ü–î –ú–ï–ù–Æ –í –¢–ï–†–ú–Ü–ù–ê–õ
// ----------------------------------------------------------
/**
 * @brief –í–∏–≤–æ–¥–∏—Ç—å –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–∏ —É Serial Monitor.
 */
void PrintMenu() {
  Serial.println("\n=== –ì–û–õ–û–í–ù–ï –ú–ï–ù–Æ ===");
  Serial.println("0 - –†–µ–∂–∏–º –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –∫–Ω–æ–ø–æ–∫");
  Serial.println("1 - –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–æ–º");
  Serial.println("2 - –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–º");
  Serial.print("–ü–æ—Ç–æ—á–Ω–∏–π —Ä–µ–∂–∏–º: ");
  switch (menuMode) {
    case 0: Serial.println("–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∫–Ω–æ–ø–æ–∫"); break;
    case 1: Serial.println("LED-–∫–µ—Ä—É–≤–∞–Ω–Ω—è"); break;
    case 2: Serial.println("–°–µ—Ä–≤–æ-–∫–µ—Ä—É–≤–∞–Ω–Ω—è"); break;
  }
  Serial.println("====================\n");
}

// ----------------------------------------------------------
//              –ö–ï–†–£–í–ê–ù–ù–Ø –°–í–Ü–¢–õ–û–î–Ü–û–î–û–ú –ó –ü–£–õ–¨–¢–ê
// ----------------------------------------------------------
/**
 * @brief –û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –ø—É–ª—å—Ç–∞ —É —Ä–µ–∂–∏–º—ñ –∫–µ—Ä—É–≤–∞–Ω–Ω—è LED.
 *
 * –ö–Ω–æ–ø–∫–∞ '*' ‚Äî –≤–º–∏–∫–∞—î —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥.
 * –ö–Ω–æ–ø–∫–∞ '#' ‚Äî –≤–∏–º–∏–∫–∞—î —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥.
 */
void HandleLEDControl(uint16_t command) {
  switch (command) {
    case 0xFFFF: break; // –ü–æ–≤—Ç–æ—Ä ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
    case 0xFFE0:   // –ö–æ–¥ –∫–Ω–æ–ø–∫–∏ "*"
      digitalWrite(LED_PIN, HIGH);
      Serial.println("üí° –°–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥ –£–í–Ü–ú–ö–ù–ï–ù–û\n");
      break;
    case 0xFF02:   // –ö–æ–¥ –∫–Ω–æ–ø–∫–∏ "#"
      digitalWrite(LED_PIN, LOW);
      Serial.println("üí° –°–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥ –í–ò–ú–ö–ù–ï–ù–û\n");
      break;
    default:
      Serial.println("–ù–µ–≤—ñ–¥–æ–º–∞ –∫–Ω–æ–ø–∫–∞ —É —Ä–µ–∂–∏–º—ñ LED.");
  }
}

// ----------------------------------------------------------
//               –ö–ï–†–£–í–ê–ù–ù–Ø –°–ï–†–í–û–ü–†–ò–í–û–î–û–ú
// ----------------------------------------------------------
/**
 * @brief –û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –ø—É–ª—å—Ç–∞ —É —Ä–µ–∂–∏–º—ñ –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–º.
 *
 * –ö–Ω–æ–ø–∫–∞ '*' ‚Äî –∑–º–µ–Ω—à—É—î –∫—É—Ç –Ω–∞ 3¬∞.
 * –ö–Ω–æ–ø–∫–∞ '#' ‚Äî –∑–±—ñ–ª—å—à—É—î –∫—É—Ç –Ω–∞ 3¬∞.
 */
void HandleServoControl(uint16_t command) {
  switch (command) {
    case 0xFFFF: break;
    case 0xFFE0:   // "*"
      servoAngle -= ANGLE_STEP;
      if (servoAngle < 0) servoAngle = 0;
      myServo.write(servoAngle);
      PrintAngleChange(servoAngle);
      break;
    case 0xFF02:   // "#"
      servoAngle += ANGLE_STEP;
      if (servoAngle > 180) servoAngle = 180;
      myServo.write(servoAngle);
      PrintAngleChange(servoAngle);
      break;
    default:
      Serial.println("–ù–µ–≤—ñ–¥–æ–º–∞ –∫–Ω–æ–ø–∫–∞ —É —Ä–µ–∂–∏–º—ñ —Å–µ—Ä–≤–æ.");
  }
}

// ----------------------------------------------------------
//              –í–ò–í–Ü–î –ö–£–¢–ê –°–ï–†–í–û –£ MONITOR
// ----------------------------------------------------------
/**
 * @brief –í–∏–≤–æ–¥–∏—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π –∫—É—Ç —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É —É –≥—Ä–∞—Ñ—ñ—á–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ.
 * @param angle –ü–æ—Ç–æ—á–Ω–∏–π –∫—É—Ç —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É.
 */
void PrintAngleChange(int angle) {
  Serial.print("–ü–æ—Ç–æ—á–Ω–∏–π –∫—É—Ç —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—É: ");
  Serial.print(angle);
  Serial.print("¬∞  [");

  int filled = map(angle, 0, 180, 0, 20);
  for (int i = 0; i < 20; i++) {
    if (i < filled) Serial.print("#");
    else Serial.print("-");
  }
  Serial.println("]\n");
}